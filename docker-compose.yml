version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - web
      - rabbitmq
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A AIForum beat --loglevel=info
    depends_on:
      - web
      - rabbitmq
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

volumes:
  postgres_data:
